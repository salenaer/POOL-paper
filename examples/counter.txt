(define Counter
  (CLASS (Root)
                 (VAR count 0)
                 (METHOD incr ()
                         (! count (+ (? count) 1)))
                 (METHOD decr ()
                         (! count (- (? count) 1)))
                 (METHOD value ()
                         (? count))))

(define ProtectedCounter
  (CLASS (Counter)
                 (VAR max 10)
                 (METHOD incr ()
                         (if (< (SEND (SELF) value) (? max))
                             (SUPER incr)
                             (display "Counter overflow")))
                 (METHOD decr ()
                         (if (> (SEND (SELF) value) 0)
                             (SUPER decr)
                             (display "Counter underflow")))))

(define counter (NEW Counter))
(SEND counter incr)
(SEND counter incr)
(SEND counter value)
(SEND counter decr)
(SEND counter value)

(define protectedCounter (NEW ProtectedCounter))
(SEND protectedCounter decr)
(SEND protectedCounter incr)
(SEND protectedCounter incr)
(SEND protectedCounter value)
(SEND protectedCounter decr)
(SEND protectedCounter value)
