(define Person
  (CLASS (list Root)
         (VAR name void)
         (VAR adress void)
         (METHOD set-name (newName)
                 (! name newName))
         (METHOD set-adress (newAdress)
                 (! adress newAdress))
         (METHOD get-name ()
                 (? name))
         (METHOD get-adress ()
                 (? adress))
         (METHOD print ()
                 (display "name: ")(display (? name))(newline)
                 (display "adress: ")(display (? adress))(newline))
         ))

(define Student
  (CLASS (list Person)
         (VAR studentId void)
         (VAR faculty void)
         (METHOD set-studentId (newID)
                 (! studentId newID))
         (METHOD set-faculty (newFaculty)
                 (! faculty newFaculty))
         (METHOD get-studentId ()
                 (? studentId))
         (METHOD get-faculty ()
                 (? faculty))
         (METHOD print ()
                 (SUPER print)
                 (display "studentId: ")(display (? studentId))(newline)
                 (display "faculty: ")(display (? faculty))(newline))
         ))

(define Personnel
  (CLASS (list Person)
         (VAR personnelId void)
         (VAR faculty void)
         (METHOD set-personnelId (newID)
                 (! personnelId newID))
         (METHOD set-faculty (newFaculty)
                 (! faculty newFaculty))
         (METHOD get-personnelId ()
                 (? personnelId))
         (METHOD get-faculty ()
                 (? faculty))
         (METHOD print ()
                 (SUPER print)
                 (display "personnelId: ")(display (? personnelId))(newline)
                 (display "faculty: ")(display (? faculty))(newline))
         ))

(define Assistent
  (CLASS (list Personnel Student)
         (VAR PhDThesis void)
         (METHOD set-PhDThesis  (newPHD)
                 (! PhDThesis  newPHD))
         (METHOD get-PhDThesis ()
                 (? PhDThesis))
         (METHOD print ()
                 (SUPER print)
                 (display "PhDThesis: ")(display (? PhDThesis:))(newline))
         ))

(define noah (NEW Student))
(SEND noah set-name "noah")
(SEND noah set-adress "Merchtem")
(SEND noah set-studentId 500305)
(SEND noah set-faculty "computerscience")

(define andy (NEW Personnel))
(SEND andy set-name "andy")
(SEND andy set-adress "10F732")
(SEND andy set-personnelId 6293581)
(SEND andy set-faculty "computerscience")

(define guillermo (NEW Assistent))
(SEND guillermo set-name "guillermo")
(SEND guillermo set-adress "Pleinlaan 2")
(SEND guillermo set-studentId 123456)
(SEND guillermo set-personnelId 654321)
(SEND guillermo set-faculty "computerscience")